name: clang-tidy
on:
  pull_request_target:
    types: [opened, synchronize, reopened]

jobs:
  clang-tidy-check:
    runs-on: ubuntu-latest

    steps:
      - name: Install basic dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y git curl wget pkg-config
          sudo apt-get install -y libxrandr-dev libxinerama-dev libxcursor-dev libxi-dev libglu1-mesa autoconf libltdl-dev libgl-dev

      - name: Setup vcpkg
        run: |
          if [ ! -d ~/vcpkg ]; then
            git clone https://github.com/microsoft/vcpkg.git ~/vcpkg
            ~/vcpkg/bootstrap-vcpkg.sh
          fi
          ~/vcpkg/vcpkg integrate install
          echo "VCPKG_ROOT=~/vcpkg" >> $GITHUB_ENV

      - uses: actions/checkout@v4
        with:
          repository: ${{ github.event.pull_request.head.repo.full_name }}
          ref: ${{ github.event.pull_request.head.ref }}

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v46
        with:
          files: |
            test/**
            src/**

      - name: Set up build environment
        run: |
          cmake --preset unixlike-gcc-debug

      - name: Run clang-tidy for src directory
        if: contains(steps.changed-files.outputs.all_changed_files, 'src/')
        uses: ZehMatt/clang-tidy-annotations@v1.1.1
        with:
          build_dir: build/unixlike-gcc-debug
          source_dir: .
          clang_tidy_file: .clang-tidy
          github_token: ${{ secrets.GITHUB_TOKEN }}
          file_filter: cpp,h,hpp,c,cc,cxx,hxx
          only_affected_lines: true
          warnings_as_errors: true
          fail_on_problems: true
          clang_tidy_args: "-path-filter=src/*"

      - name: Run clang-tidy for test directory
        if: contains(steps.changed-files.outputs.all_changed_files, 'test/')
        uses: ZehMatt/clang-tidy-annotations@v1.1.1
        with:
          build_dir: build/unixlike-gcc-debug
          source_dir: .
          clang_tidy_file: test/.clang-tidy
          github_token: ${{ secrets.GITHUB_TOKEN }}
          file_filter: cpp,h,hpp,c,cc,cxx,hxx
          only_affected_lines: true
          warnings_as_errors: true
          fail_on_problems: true
          clang_tidy_args: "-path-filter=test/*"

